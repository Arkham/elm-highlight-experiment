{"version":3,"sources":["src/elmHighlight.js","index.js"],"names":["ElmHighlight","args","self","_content","document","addEventListener","event","range","getSelectionRange","console","log","dispatchEvent","CustomEvent","detail","start","node","startContainer","offset","offsetUntil","startOffset","end","endContainer","endOffset","originalEvent","container","sel","window","getSelection","selection","rangeCount","getRangeAt","cloneRange","containerRange","createRange","selectNodeContents","contains","compareBoundaryPoints","Range","START_TO_END","END_TO_START","setStart","setEndAfter","removeAllRanges","empty","endingAt","stack","total","length","current","pop","nodeType","Node","TEXT_NODE","hasChildNodes","i","childNodes","push","content","clearSelection","HTMLElement","customElements","define","Elm","Main","init","querySelector"],"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","file":"elm-highlight-experiment.4410fdef.js","sourceRoot":"..","sourcesContent":["class ElmHighlight extends HTMLElement {\n  constructor(...args) {\n    const self = super(...args);\n\n    self._content = null;\n\n    // TODO: none of these event names are standard, and they may clash with\n    // ones that the browser emits. What's the best way to do this safely?\n\n    // TODO: this needs prettier on the whole thing\n\n    // TODO: probably needs like flow or TS checking as well\n\n    // add event handler for selections\n    document.addEventListener('selectionchange', function(event) {\n      const range = self.getSelectionRange(self);\n\n      if (range) {\n        console.log(range);\n\n        self.dispatchEvent(new CustomEvent('select', { detail: {\n          start: {\n            node: range.startContainer,\n            offset: self.offsetUntil(range.startContainer) + range.startOffset\n          },\n          end: {\n            node: range.endContainer,\n            offset: self.offsetUntil(range.endContainer) + range.endOffset\n          },\n          originalEvent: range,\n        }}));\n      }\n    });\n\n    return self;\n  }\n\n  get content() {\n    return this._content;\n  }\n\n  set content(content) {\n    if (this._content !== content) {\n      this._content = content;\n      this.clearSelection();\n    }\n  }\n\n  getSelectionRange(container) {\n    const sel = window.getSelection ? window.getSelection() : document.selection;\n\n    if (sel && sel.rangeCount > 0) {\n      // create a copy so we don't interfere with user selection range\n      const range = sel.getRangeAt(0).cloneRange();\n\n      // create a range which wraps the whole selection container\n      const containerRange = document.createRange();\n      containerRange.selectNodeContents(container);\n\n      // selection range is within bounds, all good\n      if (container.contains(range.startContainer) &&\n        container.contains(range.endContainer)) {\n          return range;\n      }\n\n      // selection range is either completely before or completely after\n      if (range.compareBoundaryPoints(Range.START_TO_END, containerRange) <= 0 ||\n        range.compareBoundaryPoints(Range.END_TO_START, containerRange) >= 0) {\n        return null;\n      }\n\n      // selection range starts before our container\n      if (!container.contains(range.startContainer)) {\n        range.setStart(containerRange.startContainer, 0);\n      }\n\n      // selection range ends after our container\n      if (!container.contains(range.endContainer)) {\n        range.setEndAfter(containerRange.endContainer);\n      }\n\n      return range;\n    }\n  }\n\n  clearSelection() {\n    const sel = window.getSelection ? window.getSelection() : document.selection;\n\n    if (sel) {\n      if (sel.removeAllRanges) {\n        sel.removeAllRanges();\n      } else if (sel.empty) {\n        sel.empty();\n      }\n    }\n  }\n\n  offsetUntil(endingAt) {\n    var stack = [this];\n    var total = 0;\n\n    while (stack.length !== 0) {\n      var current = stack.pop();\n\n      if (current === endingAt) {\n        // first, have we reached where we want to go? Get outta here!\n        break;\n      } else if (current.nodeType === Node.TEXT_NODE) {\n        // next, are we looking at a text node? Cool, add it to the total!\n        total += current.length;\n      } else if (!current.hasChildNodes()) {\n        // next, check out nodes which don't have any children. This'll be things\n        // like images and iframe embeds, and we'll count them as having length 1.\n        //\n        // TODO: is this the right thing to do? I'm just making it this way since\n        // Quill seems to.\n        total += 1;\n      } else if (current.hasChildNodes()) {\n        // shove the remaining children on the stack in reverse order (so we pop\n        // them start to end)\n        for (var i = current.childNodes.length - 1; i >= 0; i--) {\n          stack.push(current.childNodes[i]);\n        }\n      }\n    }\n\n    return total;\n  }\n}\n\ncustomElements.define('elm-highlight', ElmHighlight);\n","// index.js\n\nimport { Elm } from './src/Main.elm'\nimport './src/elmHighlight';\n\nElm.Main.init({\n  node: document.querySelector('main')\n})\n"]}